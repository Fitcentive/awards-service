# -- !Ups

-- To ensure UUIDs are autogenerated
create extension if not exists "uuid-ossp";

-- To support geography/geometry type
create extension if not exists "postgis";

-- Constraint tables
create table meetup_statuses (
    name varchar not null constraint pk_meetup_statuses primary key,
    description varchar not null
);

insert into meetup_statuses (name, description) values ('Unscheduled', 'Yet to have a proposed time for meetup');
insert into meetup_statuses (name, description) values ('Unconfirmed', 'Yet to have all parties review and accept');
insert into meetup_statuses (name, description) values ('Confirmed',   'Meetup ready');
insert into meetup_statuses (name, description) values ('Complete',    'Meetup complete');
insert into meetup_statuses (name, description) values ('Expired',     'Meetup expired');

-- Constraint tables
create table meetup_types (
    name varchar not null constraint pk_meetup_types primary key,
    description varchar not null
);

insert into meetup_types (name, description) values ('Workout', 'Meetup with people to workout together');

-- points in geographic wgs84 coordinates (epsg:4326)
create table meetups (
    id uuid not null constraint pk_meetups primary key,
    meetup_name varchar,
    meetup_time timestamp,
    meetup_duration_mins integer,
    meetup_type varchar not null constraint fk_meetup_type references meetup_types,
    meetup_status varchar not null constraint fk_meetup_status references meetup_statuses,
    owner uuid not null,
    location_id uuid,
    created_at timestamp not null default now(),
    updated_at timestamp not null default now()
);

create table locations(
    id uuid not null constraint pk_locations primary key,
    fsq_id varchar,
    location_name varchar,
    website varchar,
    phone varchar,
    coordinates geometry(Point, 4326) not null,
    created_at timestamp not null default now(),
    updated_at timestamp not null default now(),
    constraint fsq_id_unique unique (fsq_id)
);

create table meetup_participants(
    meetup_id uuid not null constraint fk_meetup_id references meetups on delete cascade,
    user_id uuid not null,
    created_at timestamp not null default now(),
    updated_at timestamp not null default now(),
    primary key (meetup_id, user_id)
);

create table availabilities(
    id uuid not null constraint pk_availabilities primary key,
    meetup_id uuid not null constraint fk_meetup_id references meetups on delete cascade,
    user_id uuid not null,
    availability_start timestamp,
    availability_end timestamp,
    created_at timestamp not null default now(),
    updated_at timestamp not null default now()
);


create table meetup_decisions(
    meetup_id uuid not null constraint fk_meetup_id references meetups on delete cascade,
    user_id uuid not null,
    has_accepted boolean not null,
    created_at timestamp not null default now(),
    updated_at timestamp not null default now(),
    primary key (meetup_id, user_id)
);

# -- !Downs